/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
char ch='(';
char c=')';
void solve(TreeNode* root,string &s){
    if(root==NULL) {s+=c; return ;}
    if(root->left){
        s+=ch;
        s+=to_string(root->left->val);
        solve(root->left,s);
        s+=c;
    } else if(!root->left && root->right){
        s+=ch;
        s+=c;
    }
    if(root->right){
        s+=ch;
        s+=to_string(root->right->val);
        solve(root->right,s);
        s+=c;
    }
}
    string tree2str(TreeNode* root) {
        string s=to_string(root->val);
        solve(root,s);
        return s;
    }
};
