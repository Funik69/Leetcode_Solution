void dfs(int i,int j,int n,vector<vector<int>>& m,vector<string> &v,string str){
    if(i<0 || j<0 || i>=n || j>=n ||m[i][j]==0) {
        return ;
    }
    if(i==n-1 && j==n-1){
        v.push_back(str);
        return ;
    }
    m[i][j]=0;
    dfs(i,j+1,n,m,v,str+"R");
    dfs(i,j-1,n,m,v,str+"L");
    dfs(i-1,j,n,m,v,str+"U"); 
    dfs(i+1,j,n,m,v,str+"D");
          m[i][j]=1;
          return ;
    
}
class Solution{
    public:
    vector<string> findPath(vector<vector<int>> &m, int n) {
       vector<string> v;
       string str="";
       dfs(0,0,n,m,v,str);
       return v;
    }
};
