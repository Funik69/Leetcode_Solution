class Solution
{
    public:
    //Function to remove a loop in the linked list.
    bool isCycle(Node* head){
        Node* slow=head;
        Node* fast=head;
        while(fast!=NULL && fast->next!=NULL){
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast) return true;
        }
        return false;
    }
    void removeLoop(Node* head)
    {
        
        if(isCycle(head)){
            Node* slow=head;
            Node* fast=head;
            do{
                slow=slow->next;
                fast=fast->next->next;
            } while(slow!=fast);
            if(head==fast && head==slow){
               while(fast->next!=head){
                   fast=fast->next;
               }
               fast->next=NULL;
                
            }else{
            fast=head;
            while(slow->next!=fast->next){
                slow=slow->next;
                fast=fast->next;
            }
            slow->next=NULL;
        }
            }
           
    }
};
