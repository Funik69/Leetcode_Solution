//Using DFS
class Solution {
    bool dfs(int node,vector<int> adj[],int vis[],int pathVis[]){
        vis[node]=1;
        pathVis[node]=1;
        for(auto ad:adj[node]){
            if(!vis[ad]){
                if(dfs(ad,adj,vis,pathVis)) 
                  return true;
            }
            else if(pathVis[ad]) 
                 return true;
        }
        pathVis[node]=0;
        return false;
    }
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
       int vis[V]={0};
       int pathVis[V]={0};
       for(int i=0;i<V;i++){
           if(!vis[i]){
               if(dfs(i,adj,vis,pathVis)) return true;
           } 
        }   return false; 
    }
  
};
