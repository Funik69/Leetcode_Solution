/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
void inorder(TreeNode* root,vector<int> &v){
    if(root==NULL)return;
    inorder(root->left,v);
    v.push_back(root->val);
    inorder(root->right,v);

}  
 public:
int minDiffInBST(TreeNode* root) {
        vector<int> v;
        inorder(root,v);
        int ans=v[1]-v[0];
        for(int i=1;i<v.size()-1;i++){
            ans=min(ans,v[i+1]-v[i]);
        }
        return ans;
    }
};
