class Solution {
public:
 void soll(int x, vector<vector<int>>& mymat, vector<bool>& trkk, vector<int>& cop) {
        trkk[x] = true;
        cop.push_back(x);
        for (int v = 0; v < mymat.size(); v++) {
            if (mymat[x][v] == 1 && !trkk[v]) {
                soll(v, mymat, trkk, cop);
            }
        }
    }

    int countCompleteComponents(int n, vector<vector<int>>& edges) {
        int counterr = 0;
        vector<vector<int>> mymat(n, vector<int>(n, 0));
        for (vector<int> i : edges) {
            mymat[i[0]][i[1]] = 1;
            mymat[i[1]][i[0]] = 1; }
        vector<bool> trkk(n, false);
        for (int i = 0; i < n; i++) {
            if (!trkk[i]) {
                vector<int> cop;
                soll(i, mymat, trkk, cop);
                bool fin = true;
                for (int x : cop) {
                    for (int v : cop) {
                        if (x != v && mymat[x][v] != 1) {
                            fin = false;
                            break; }
                    }
                    if (!fin) break;}
                    if (fin)  counterr++;
            }
        } return counterr;
    }
};
