class Solution {
public:
    vector<long long> distance(vector<int>& myVecAr) {
        map<int,vector<int>> myMapp;
        for(int i=0;i<myVecAr.size();i++)  myMapp[myVecAr[i]].push_back(i);
        vector<long long> res(myVecAr.size(),0);
        map<int,int> mp;
        for(auto itr:myMapp){
            vector<int> tempVec = itr.second;
            long long myResAns = 0;
            for(int i=0;i<tempVec.size();i++)  myResAns += abs(tempVec[i]-tempVec[0]);
            res[tempVec[0]] = myResAns;
            for(int i=1;i<tempVec.size();i++){
                res[tempVec[i]] = myResAns + ((i*(tempVec[i]-tempVec[i-1])) - (tempVec.size()-i)*(tempVec[i]-tempVec[i-1]));
                myResAns = res[tempVec[i]];
            }
        }
        return res;
    }
};
