/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
int length(ListNode* head){
    int count=0;
    while(head!=NULL){
        count++;
        head=head->next;
    }
    return count;
}
    ListNode* reverseKGroup(ListNode* head, int k) {
        if(head==NULL || head->next==NULL)return head;
        ListNode* prevptr=NULL;
    ListNode* curr=head;
    ListNode* nextptr;
    int cnt=0;
    int len=length(head);
    if(len<k)return head;
    while(curr!=NULL && cnt<k ){
        nextptr=curr->next;
        curr->next=prevptr;
        prevptr=curr;
        curr=nextptr;
        cnt++;
    }
    if(nextptr!=NULL){
        head->next =reverseKGroup(nextptr,k);
    }
    return prevptr;
    }
};
