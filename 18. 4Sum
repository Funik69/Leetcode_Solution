class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, long long target) {
        vector<vector<int>> vv;
        int n=nums.size();
        if(n==0)return vv;
        sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                long long trgt= target-nums[i]-nums[j];
                int s=j+1;
                int e=n-1;
                while(s<e){
                    long long sm=nums[s]+nums[e];
                    if(sm>trgt)e--;
                    else if(sm<trgt)s++;
                    else if(sm==trgt){
                        vector<int> v(4,0);
                        v[0]=nums[i];
                        v[1]=nums[j];
                        v[2]=nums[s];
                        v[3]=nums[e];
                        vv.push_back(v);
                        while(s<e && nums[s]==v[2])++s;
                        while(s<e && nums[e]==v[3])--e;
                    }
                }
                while(j+1<n && nums[j+1]==nums[j])++j;
            }
            while(i+1<n && nums[i+1]==nums[i])++i;
        }
        return vv;
        
    }
};
