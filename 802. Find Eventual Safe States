class Solution {
public:
    vector<int> eventualSafeNodes(vector<vector<int>>& pre) {
        int V=pre.size();
        vector<int> adj[V];
        vector<int> ind(V,0);

        for(int i=0;i<V;i++){
             for(auto j:pre[i]){
              adj[j].push_back(i);
        }  }
        for(int i=0;i<V;i++){
            for(auto j:adj[i]){
                ind[j]++;
            }
        }
    queue<int> q;
    vector<int> topo;
    for(int i=0;i<V;i++){
        if(ind[i]==0) q.push(i);
    }
    while(!q.empty()){
        int node=q.front();
        q.pop();
        topo.emplace_back(node);
        for(auto i:adj[node]){
            ind[i]--;
            if(ind[i]==0) q.push(i);
        }
    }
    sort(topo.begin(),topo.end());
    return topo;
    }
};
